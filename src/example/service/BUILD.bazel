load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("//src/server:go_service.bzl", "go_grpc_server")

package(default_visibility = ["//visibility:private"])

go_library(
    name = "service",
    srcs = [
        "get_example.go",
        "service.go",
        "set_example.go",
    ],
    importpath = "github.com/stabai/readysetgo/src/example/service",
    deps = [
        "//proto/example:example_go_proto",
        "//proto/example/service/v1:example_service_go_proto",
        "@org_golang_google_protobuf//types/known/emptypb",
    ],
)

go_grpc_server(
    name = "server_lib",
    base_importpath = "github.com/stabai/readysetgo/src/example/service",
    go_service = ":service",
    go_service_proto = "//proto/example/service/v1:example_service_go_proto",
    service_name = "ExampleService",
)

go_binary(
    name = "server",
    embed = [":server_lib"],
    visibility = ["//visibility:public"],
)

go_image(
    name = "example-go-grpc-image",
    embed = [":server_lib"],
    goarch = "amd64",
    goos = "linux",
    importpath = "github.com/stabai/readysetgo/src/example/service",
    visibility = ["//visibility:public"],
)

# TODO(stabai): Remove this when done using it for toolchain debugging purposes
go_image(
    name = "example-go-grpc-image-broken",
    embed = [":server_lib"],
    importpath = "github.com/stabai/readysetgo/src/example/service",
    visibility = ["//visibility:public"],
)

go_test(
    name = "service_test",
    srcs = ["service_test.go"],
    deps = [
        ":service",  # keep
        "//proto/example/service/v1:example_service_go_proto",
        "//src/server/testing",
    ],
)
